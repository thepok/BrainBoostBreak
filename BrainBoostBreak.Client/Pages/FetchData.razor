@page "/fetchdata"
@using BrainBoostBreak.Shared
@inject HttpClient Http


@if (Result != null)
{
    <h1>Letze Frage:</h1>

    @Result.Text

}
<br />

<h1>Nächste Frage</h1>

@if (Question == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @Question.Text
    <br />
    <br />
    foreach (var answer in Question.Answers)
    {
        <button @onclick="@(()=>GetNext(Question.Id, answer.Id))">@answer.Text</button>
        <br />
    }
}

@code {
    QuestionTO Question;

    QuestionTO NextQuestion;

    ResultTO Result;

    [Parameter]
    public int QuestionId { get; set; }

    [Parameter]
    public int AnswerId { get; set; }

    protected override async Task OnInitAsync()
    {
        Question = await Http.GetJsonAsync<QuestionTO>("Question");
        StateHasChanged();
        NextQuestion = await Http.GetJsonAsync<QuestionTO>("Question");
        NextQuestion.Text += new Random().Next();

    }

    public async void GetNext(int questionId, int answerId)
    {

        Question = NextQuestion;
        NextQuestion = null;
        var NextQuestionTask=Http.GetJsonAsync<QuestionTO>("Question");
        Result = await Http.GetJsonAsync<ResultTO>(@"Result\"+questionId+@"\"+answerId);
        StateHasChanged();
        NextQuestion = await NextQuestionTask;
        if(Question==null)
        {
            Question = NextQuestion;
            StateHasChanged();
        }
        NextQuestion.Text += new Random().Next();
    }
}
